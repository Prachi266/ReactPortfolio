{"version":3,"sources":["Menu.js","About.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","to","About","Contact","class","App","path","exact","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gOAeeA,EAXF,WACT,OACI,yBAAKC,UAAU,OACX,4BACI,gCAAK,kBAAC,IAAD,CAAMC,GAAG,KAAT,QAAL,KACA,gCAAK,kBAAC,IAAD,CAAMA,GAAG,SAAT,SAAL,KACA,gCAAK,kBAAC,IAAD,CAAMA,GAAG,WAAT,WAAL,QCSDC,EAfD,WACV,OACI,yBAAKF,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,SACf,wCACA,ueCQGG,EAdC,WACZ,OACI,yBAAKH,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKI,MAAM,WACH,yCACA,yBAAKA,MAAM,UACX,8CACA,sDACA,oE,OCQLC,MAdf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAYC,IAClC,kBAAC,IAAD,CAAOH,KAAK,SAASE,UAAYN,IACjC,kBAAC,IAAD,CAAOI,KAAK,WAAWE,UAAYL,QASrCM,EAAO,WACX,OACE,yBAAKT,UAAU,QACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,0CAAe,gDAAf,KACA,iHCjBYU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.2179f19a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Menu = () =>{\r\n    return(\r\n        <div className=\"nav\">\r\n            <ul>\r\n                <li> <Link to=\"/\">Home</Link> </li>\r\n                <li> <Link to=\"About\">About</Link> </li>\r\n                <li> <Link to=\"Contact\">Contact</Link> </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Menu;","import React from 'react';\r\nimport Menu from './Menu';\r\nimport './App.css';\r\n\r\nconst About = () =>{\r\n    return(\r\n        <div className=\"main\">\r\n            <Menu />\r\n            <div className=\"about\">\r\n            <h1>About Me</h1>\r\n            <p>I'm a student in M.B.M. Engineering College(Jodhpur).\r\n                My field of interest is Web and Android Development. I've created some basic web templates and I always look forward to learn new technologies related to these fields. I like to try new things and learn from them.\r\n                 And my work has always been centered around clean and aesthetic designs with a focus on usable interface.\r\n                I have a great deal of passion for what I do and I feel it reflects in my work.\r\n            </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default About;","import React from 'react';\r\nimport './App.css';\r\nimport Menu from './Menu';\r\n\r\nconst Contact = () =>{\r\n    return(\r\n        <div className=\"main\">\r\n            <Menu />\r\n            <div class=\"contact\">\r\n                    <h1>Reach Out</h1>\r\n                    <div class=\"image\"></div>\r\n                    <h2>Prachi Parihar</h2>\r\n                    <p>Contact: +91-9680184213</p>\r\n                    <p>Email: prachiparihar.p26@gmail.com</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport Menu from './Menu';\nimport About from './About';\nimport Contact from './Contact';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Switch>\n        <Route path=\"/\" exact component= {Home} />\n        <Route path=\"/about\" component= {About} />\n        <Route path=\"/contact\" component= {Contact} />\n        </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\nconst Home = () => {  \n  return(\n    <div className=\"main\">\n      <Menu />\n      <div className=\"home\">\n        <h1>My Name is <span>Prachi Parihar</span>.</h1>\n        <h3>I AM A WEB DEVELOPER. I STAND ON A SWEET SPOT WHERE DESIGN AND CODE INTERACTS.</h3>\n      </div>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}